# Docker Compose Override f端r CI-Umgebung
# Verwendet die bereits laufenden GitHub Actions Services

services:
  # Postgres Service - verbindet sich mit GitHub Actions PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: imf-postgres-ci
    ports:
      - "5433:5432"  # Anderer Port um Konflikte zu vermeiden
    environment:
      POSTGRES_DB: imf_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - ./docker/init-db-ci.sql:/docker-entrypoint-initdb.d/init-db-ci.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d imf_test"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - imf-network

  # Redis f端r Tests
  redis:
    image: redis:7-alpine
    container_name: imf-redis-ci
    ports:
      - "6380:6379"  # Anderer Port f端r CI
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - imf-network

  # IMF App f端r CI - nur wenn needed
  imf-app:
    environment:
      - NODE_ENV=test
      - AI_STORAGE_TYPE=memory
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/imf_test
      - REDIS_URL=redis://localhost:6380
      - CI=true
      - GITHUB_ACTIONS=true
    profiles:
      - ci-full  # Nur starten wenn explizit angefordert

networks:
  imf-network:
    driver: bridge

volumes:
  postgres_data_ci: