name: E2E UI Tests (DISABLED)

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Placeholder no-op dispatch while E2E tests are disabled'
        required: false

jobs:
  noop:
    runs-on: ubuntu-latest
    steps:
      - name: E2E tests are currently disabled
        run: echo "E2E workflow disabled on 2025-08-09. Remove comments in this file to re-enable full test matrix."

## Archived original workflow (commented out below for quick restore)
## -----------------------------------------------------------------
## To restore: replace the minimal 'on:' block with the original triggers
## and uncomment the desired job definitions.
## -----------------------------------------------------------------
## ORIGINAL CONTENT BELOW (COMMENTED)
##
## on:
##   push:
##     branches: [main, develop, Development]
##   pull_request:
##     branches: [main]
##   workflow_dispatch:
##     inputs:
##       test_pattern:
##         description: 'Test pattern to run (optional)'
##         required: false
##         default: ''
##       headed:
##         description: 'Run tests in headed mode'
##         required: false
##         default: 'false'
## env:
##   NODE_VERSION: '20'
##   PYTHON_VERSION: '3.11'
## jobs:
##   e2e-tests:
##     name: 🎭 Playwright E2E Tests
##     runs-on: ubuntu-latest
##     timeout-minutes: 45
##     services:
##       postgres:
##         image: postgres:15
##         env:
##           POSTGRES_USER: test
##           POSTGRES_PASSWORD: test
##           POSTGRES_DB: imf_test_db
##         options: >-
##           --health-cmd pg_isready
##           --health-interval 10s
##           --health-timeout 5s
##           --health-retries 5
##         ports:
##           - 5432:5432
##       redis:
##         image: redis:7-alpine
##         options: >-
##           --health-cmd "redis-cli ping"
##           --health-interval 10s
##           --health-timeout 5s
##           --health-retries 5
##         ports:
##           - 6379:6379
##     steps:
##       - name: 📥 Checkout code
##         uses: actions/checkout@v4
##       - name: 🏗️ Setup Node.js
##         uses: actions/setup-node@v4
##         with:
##           node-version: ${{ env.NODE_VERSION }}
##           cache: 'npm'
##       - name: 📦 Install dependencies
##         run: npm ci
##       - name: 🏗️ Build application
##         run: npm run build
##         env:
##           NODE_ENV: test
##           DATABASE_URL: postgresql://test:test@localhost:5432/imf_test_db
##           REDIS_URL: redis://localhost:6379
##       - name: 🗄️ Setup database
##         run: |
##           npm run db:push
##         env:
##           NODE_ENV: test
##           DATABASE_URL: postgresql://test:test@localhost:5432/imf_test_db
##       - name: 🚀 Start application in background
##         run: |
##           nohup npm run dev &
##           echo $! > app.pid
##         env:
##           NODE_ENV: test
##           PORT: 3000
##           DATABASE_URL: postgresql://test:test@localhost:5432/imf_test_db
##           REDIS_URL: redis://localhost:6379
##           PYTHON_FRAMEWORK_ENABLED: false
##           TEST_MANAGER_ENABLED: false
##       - name: ⏳ Wait for application to be ready
##         run: |
##           timeout=300
##           while [ $timeout -gt 0 ]; do
##             if curl -f http://localhost:3000/api/health >/dev/null 2>&1 || curl -f http://localhost:3000 >/dev/null 2>&1; then
##               echo "✅ Application is ready"
##               break
##             fi
##             echo "⏳ Waiting for application to start... (${timeout}s remaining)"
##             sleep 5
##             timeout=$((timeout-5))
##           done
##           if [ $timeout -le 0 ]; then
##             echo "❌ Application failed to start within timeout"
##             echo "📋 Application logs:"
##             cat nohup.out || echo "No logs found"
##             exit 1
##       - name: 📦 Install E2E test dependencies
##         run: |
##           cd e2e
##           npm ci
##       - name: 🎭 Install Playwright browsers
##         run: |
##           cd e2e
##           npx playwright install --with-deps chromium
##       - name: 🧪 Run Playwright tests
##         run: |
##           cd e2e
##           npx playwright test ${{ github.event.inputs.test_pattern || '' }} ${{ github.event.inputs.headed == 'true' && '--headed' || '' }}
##         env:
##           BASE_URL: http://localhost:3000
##           CI: true
##       - name: 📊 Upload Playwright report
##         uses: actions/upload-artifact@v4
##         if: always()
##         with:
##           name: playwright-report
##           path: e2e/playwright-report/
##           retention-days: 30
##       - name: 📊 Upload test results
##         uses: actions/upload-artifact@v4
##         if: always()
##         with:
##           name: test-results
##           path: e2e/test-results/
##           retention-days: 30
##       - name: 🛑 Stop application
##         if: always()
##         run: |
##           if [ -f app.pid ]; then
##             kill $(cat app.pid) || true
##             rm app.pid
##           fi
##           pkill -f "npm run dev" || true
##   e2e-docker-tests:
##     name: 🐳 Docker E2E Tests
##     runs-on: ubuntu-latest
##     timeout-minutes: 60
##     if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[docker-e2e]')
##     steps:
##       - name: 📥 Checkout code
##         uses: actions/checkout@v4
##       - name: 🐳 Build and run Docker E2E tests
##         run: |
##           cd e2e
##           docker-compose up --build --abort-on-container-exit --exit-code-from playwright
##         env:
##           NODE_ENV: test
##       - name: 📊 Extract test results from container
##         if: always()
##         run: |
##           cd e2e
##           docker-compose cp playwright:/app/test-results ./test-results || true
##           docker-compose cp playwright:/app/playwright-report ./playwright-report || true
##       - name: 📊 Upload Docker test results
##         uses: actions/upload-artifact@v4
##         if: always()
##         with:
##           name: docker-test-results
##           path: |
##             e2e/test-results/
##             e2e/playwright-report/
##           retention-days: 30
##       - name: 🧹 Cleanup Docker containers
##         if: always()
##         run: |
##           cd e2e
##           docker-compose down -v
##   mobile-e2e:
##     name: 📱 Mobile E2E Tests
##     runs-on: ubuntu-latest
##     timeout-minutes: 30
##     if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[mobile-e2e]')
##     services:
##       postgres:
##         image: postgres:15
##         env:
##           POSTGRES_USER: test
##           POSTGRES_PASSWORD: test
##           POSTGRES_DB: imf_test_db
##         options: >-
##           --health-cmd pg_isready
##           --health-interval 10s
##           --health-timeout 5s
##           --health-retries 5
##         ports:
##           - 5432:5432
##     steps:
##       - name: 📥 Checkout code
##         uses: actions/checkout@v4
##       - name: 🏗️ Setup Node.js
##         uses: actions/setup-node@v4
##         with:
##           node-version: ${{ env.NODE_VERSION }}
##           cache: 'npm'
##       - name: 📦 Install and build
##         run: |
##           npm ci
##           npm run build
##       - name: 🚀 Start application
##         run: |
##           nohup npm run dev &
##           sleep 30
##         env:
##           NODE_ENV: test
##           DATABASE_URL: postgresql://test:test@localhost:5432/imf_test_db
##       - name: 📦 Setup E2E tests
##         run: |
##           cd e2e
##           npm ci
##           npx playwright install --with-deps chromium
##       - name: 📱 Run mobile-specific tests
##         run: |
##           cd e2e
##           npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
##         env:
##           BASE_URL: http://localhost:3000
##           CI: true
##       - name: 📊 Upload mobile test results
##         uses: actions/upload-artifact@v4
##         if: always()
##         with:
##           name: mobile-test-results
##           path: |
##             e2e/test-results/
##             e2e/playwright-report/
##           retention-days: 30
