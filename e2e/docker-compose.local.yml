version: '3.8'

services:
  # IMF Application - using local registry
  imf-app:
    image: localhost:5000/imf-app:latest
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=test
      - PORT=3000
      - DATABASE_URL=postgresql://test:test@postgres:5432/imf_ai_storage
      - REDIS_URL=redis://redis:6379
      - PYTHON_FRAMEWORK_ENABLED=false
      - TEST_MANAGER_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - imf-test-network

  # PostgreSQL Database - using local registry
  postgres:
    image: localhost:5000/postgres:15
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=imf_ai_storage
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U test -d imf_ai_storage']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ../docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - imf-test-network

  # Redis Cache - using local registry
  redis:
    image: localhost:5000/redis:7-alpine
    ports:
      - '6380:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - imf-test-network

  # Playwright E2E Tests - using local registry
  playwright:
    image: localhost:5000/imf-playwright:latest
    environment:
      - BASE_URL=http://imf-app:3000
      - CI=true
    volumes:
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report
    depends_on:
      imf-app:
        condition: service_healthy
    networks:
      - imf-test-network
    command: npm test

volumes:
  postgres_test_data:

networks:
  imf-test-network:
    driver: bridge
